name: Deploy to Multiple Hostinger Accounts

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install and Build
        run: |
          npm ci
          npm run build
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/
          retention-days: 1

  deploy-primary:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/
          
      - name: Deploy to Primary Hostinger
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER_PRIMARY }}
          username: ${{ secrets.FTP_USERNAME_PRIMARY }}
          password: ${{ secrets.FTP_PASSWORD_PRIMARY }}
          protocol: ftps
          port: 21
          local-dir: ./dist/
          server-dir: ./
          state-name: ftp-deploy-sync-state-primary.json
          log-level: minimal

  deploy-backup:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/
          
      - name: Deploy to Backup Hostinger
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER_BACKUP }}
          username: ${{ secrets.FTP_USERNAME_BACKUP }}
          password: ${{ secrets.FTP_PASSWORD_BACKUP }}
          protocol: ftps
          port: 21
          local-dir: ./dist/
          server-dir: ./
          state-name: ftp-deploy-sync-state-backup.json
          log-level: minimal

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Only on manual trigger
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/
          
      - name: Deploy to Staging Hostinger
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER_STAGING }}
          username: ${{ secrets.FTP_USERNAME_STAGING }}
          password: ${{ secrets.FTP_PASSWORD_STAGING }}
          protocol: ftps
          port: 21
          local-dir: ./dist/
          server-dir: ./
          state-name: ftp-deploy-sync-state-staging.json
          log-level: minimal