name: Deploy to Hostinger

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: "deploy-prod"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Vite site
        run: npm run build

      - name: Verify build output
        run: |
          echo "Build completed. Checking output..."
          ls -la dist/
          echo "Total dist size:"
          du -sh dist/

      - name: Clean FTP state file (prevent corruption)
        run: |
          rm -f .ftp-deploy-sync-state.json || true
          echo "State file cleaned to prevent deployment issues"

      - name: Deploy to Hostinger via FTPS
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps  # SECURE FTP REQUIRED
          port: 21
          local-dir: ./dist/
          server-dir: public_html/  # Hostinger expects this directory
          state-name: .ftp-deploy-sync-state.json
          log-level: verbose
          dangerous-clean-slate: false
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.env
            **/.env.*

      - name: Deployment Status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "üéâ Deployment successful!"
            echo "Site should be live at: https://supplysideflooringinstallation.com"
            echo "Remember to clear Hostinger cache in hPanel!"
          else
            echo "‚ùå Deployment failed - check logs above"
          fi